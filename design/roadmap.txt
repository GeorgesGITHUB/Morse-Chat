Collection of categorized items

initLayout: foundational UI subject to future iterations
- Layout proportions like Whatsapp
- Components for UI elements
- Styling for layout and components

Morse Encoding/Decoding: translation and sound
- Morse Encoding/Decoding logic API in Go
- Play morse btn
- Play morse code via AudioContext oscillator, based on morse str value
- Translate toggle btn
- Translate all toggle btn

Persistence V1:
- Save Chat: After sending to all clients, post AWS RDS via Go Service
- Schemas:
    user{id, name}
    message{id, senderID, raw, morse, plaintext, timestamp}

Deployment:
- Separate Vercel Projects for frontend and backend
- Separate both into different directories
- Re-design to accomodate for downtime of either
    - Explicit connect/reconnect buttons
    - Reconnecting scripts with loading spinner displayed

APIs (NOT READY)
- Frontend requests Backend API (Go Service) for chat logs JSON
- Secure the enpoints 

Login: (NOT READY)
- User creation
- Authentication

Cache (NOT READY)
- Use Redis (stores in server memory, might use clusters)
- Modify fetching Go service to check cache first

(go cloud might be useful)
Group Chats: (NOT READY)
- use pub/sub logic in go
- update persistence and cache