Development Diary
Format is Problem, Alternative, Outcome

P: Choosing frontend tech
A: NextJS, Angular, Vite
O: Opted for Vite bundler despite React Doc recommending framework b/c it's light

P: Need a communication protocol
A: Web Socket, Pooling, gRPC
O: Web Sockets are is duplex and is simpler to implement than gRPC

P: Web Socket not working -> opening then closing
A: Googling error msgs, debugging js client side, debugging golang backend
O: On client, fixed insta socket cleanup & non json msg being sent from client

P: WebSocket's received data isn't binded to a componentd
A1: WebSocket as a service called by components
A2: WebSocket -> Redux -> relevant components
A3: WebSocket -> Redux -> Redis -> relevant components
A4: Switch to useWebSocket, enable share, bind lastJsonMsg to component
O: 
  A4 auto manages reconnecting, subbing to shared ws, + convenience
  and A2 & A3 are beyond the scope of an mvp

P: Child components btn onClick sets parent's state, triggering error.
Findings after investigating
  Concurent onClick events are manipulating a shared state using setState.
  React's setState callback doesn't guarantee synchronization.
  This can lead to a race condition between all the async calls.
A: Provide the child with an update func in place of setState
O: Works

P: Opening connection timeout for Go to AWS RDS PostgreSQL
1. Separately tested the connection to the DB using DBeaver and got the timeout
2. Created a security group in AWS to allow inbound connections to DB (not setup by default)
P: When pinging the db --> pq: no pg_hba.conf entry for host
A: Change from default param group
O: Works!

P: Errors and inconsistencies transporting and assigning to message type members
Solution:
  I gave the members expected types and only manipulated them 
  where they were needed (SRP), instead of small manipulations across the code base
Outcome:
  Much easier to maintain.